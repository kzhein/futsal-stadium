{"version":3,"sources":["constants/availableHourConstants.js","constants/userConstants.js","constants/bookingConstants.js","constants/messageConstants.js","constants/dayConstants.js","store.js","reducers/availableHourReducers.js","reducers/userReducers.js","reducers/bookingReducers.js","reducers/messageReducers.js","reducers/dayReducers.js","actions/userActions.js","components/Header.js","actions/messageActions.js","components/Message.js","actions/availableHourActions.js","utils/formatDate.js","components/DatePicker.js","actions/bookingActions.js","components/Fab.js","components/AvailableHour.js","components/AvailableHours.js","screens/HomeScreen.js","components/UserDetailsUpdate.js","components/UserBookings.js","components/UserPasswordUpdate.js","screens/ProfileScreen.js","screens/ConfirmBookingScreen.js","screens/LoginScreen.js","screens/SignupScreen.js","screens/DaysListScreen.js","actions/dayActions.js","components/routing/PrivateRoute.js","components/routing/RestrictRoute.js","screens/DayEditScreen.js","utils/getDay.js","screens/BookingsListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["AVAILABLE_HOUR_REQUEST","AVAILABLE_HOUR_SUCCESS","AVAILABLE_HOUR_FAIL","TOGGLE_SELECTED_HOUR","SET_AVAILABLE_HOUR_DATE","USER_LOAD_REQUEST","USER_LOAD_SUCCESS","USER_LOAD_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_SIGNUP_FAIL","USER_DETAILS_UPDATE_REQUEST","USER_DETAILS_UPDATE_SUCCESS","USER_DETAILS_UPDATE_FAIL","USER_PASSWORD_UPDATE_REQUEST","USER_PASSWORD_UPDATE_SUCCESS","USER_PASSWORD_UPDATE_FAIL","CLEAR_AUTH_ERROR","CLEAR_AUTH_SUCCESS","BOOKING_CREATE_REQUEST","BOOKING_CREATE_SUCCESS","BOOKING_CREATE_FAIL","BOOKING_STATUS_RESET","USER_BOOKINGS_REQUEST","USER_BOOKINGS_SUCCESS","USER_BOOKINGS_FAIL","BOOKING_ALL_REQUEST","BOOKING_ALL_SUCCESS","BOOKING_ALL_FAIL","BOOKING_ALL_RESET","BOOKING_APPROVE_REQUEST","BOOKING_APPROVE_SUCCESS","BOOKING_APPROVE_FAIL","BOOKING_APPROVE_RESET","BOOKING_DELETE_REQUEST","BOOKING_DELETE_SUCCESS","BOOKING_DELETE_FAIL","BOOKING_DELETE_RESET","SET_MESSAGE","REMOVE_MESSAGE","DAY_LIST_REQUEST","DAY_LIST_SUCCESS","DAY_LIST_FAIL","DAY_REQUEST","DAY_SUCCESS","DAY_FAIL","DAY_UPDATE_REQUEST","DAY_UPDATE_SUCCESS","DAY_UPDATE_FAIL","CLEAR_DAY_SUCCESS","CLEAR_DAY_ERROR","reducer","combineReducers","availableHourDetails","state","loading","date","availableHours","error","action","type","payload","map","ava","_id","selected","userAuth","token","localStorage","getItem","isAuthenticated","user","success","newBooking","userBookings","bookings","allBookings","allTotal","bookingApprove","bookingId","bookingDelete","message","dayDetails","days","day","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","clearAuthError","dispatch","clearAuthSuccess","Header","useDispatch","useSelector","isAdmin","role","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","className","style","fontSize","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Link","onClick","removeItem","setMessage","Message","Row","Col","md","Alert","onClose","dismissible","text","getAvailableHours","a","axios","get","headers","res","data","response","formatDate","dateObject","Date","getFullYear","getMonth","getDate","DatePicker","useState","setDate","useEffect","formattedDate","setAvaDate","onChange","value","minDate","resetBookingStatus","getAllBookings","perPage","currentPage","getState","config","Authorization","resetBookingApprove","resetBookingDelete","Fab","showFab","animation","useSpring","opacity","transform","div","hoursToOrder","filter","newBookings","post","time","Spinner","as","aria-hidden","AvailableHour","availableHour","xs","lg","booked","AvailableHours","width","height","HomeScreen","find","xl","UserDetailsUpdate","useForm","handleSubmit","register","errors","Form","onSubmit","values","details","patch","Group","controlId","Label","Control","defaultValue","name","placeholder","ref","required","Text","phone","Button","disabled","size","UserBookings","ListGroup","length","booking","status","UserPasswordUpdate","getValues","reset","newToken","setItem","updateUserPassword","minLength","passwordCurrent","password","validate","passwordsMatch","passwordConfirm","ProfileScreen","ConfirmBookingScreen","rows","LoginScreen","location","history","from","pathname","push","login","pattern","email","SignupScreen","signup","DaysListScreen","Table","striped","bordered","hover","responsive","index","openHours","PrivateRoute","Component","component","rest","render","props","RestrictRoute","allowed","includes","DayEditScreen","match","setOpenHours","showLoading","params","getDay","isSubscribed","checkedHours","oh","oh2","e","preventDefault","hoursToUpdate","openHour","updateDay","Check","label","checked","toggleSelected","dt","BookingsListScreen","loadingGetBookings","errorGetBookings","bookingToApprove","loadingApproveBooking","errorApproveBooking","successApproveBooking","bookingToDelete","loadingDeleteBooking","errorDeleteBooking","successDeleteBooking","setPerPage","setCurrentPage","handleApprove","window","confirm","approveBooking","handleDelete","delete","deleteBooking","target","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","initialPage","containerClassName","pageClassName","pageLinkClassName","activeClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","App","Error","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b077c612.chunk.js","sourcesContent":["export const AVAILABLE_HOUR_REQUEST = 'AVAILABLE_HOUR_REQUEST';\nexport const AVAILABLE_HOUR_SUCCESS = 'AVAILABLE_HOUR_SUCCESS';\nexport const AVAILABLE_HOUR_FAIL = 'AVAILABLE_HOUR_FAIL';\n\nexport const TOGGLE_SELECTED_HOUR = 'TOGGLE_SELECTED_HOUR';\n\nexport const SET_AVAILABLE_HOUR_DATE = 'SET_AVAILABLE_HOUR_DATE';\n","export const USER_LOAD_REQUEST = 'USER_LOAD_REQUEST';\nexport const USER_LOAD_SUCCESS = 'USER_LOAD_SUCCESS';\nexport const USER_LOAD_FAIL = 'USER_LOAD_FAIL';\n\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\n\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_SIGNUP_REQUEST = 'USER_SIGNUP_REQUEST';\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS';\nexport const USER_SIGNUP_FAIL = 'USER_SIGNUP_FAIL';\n\nexport const USER_DETAILS_UPDATE_REQUEST = 'USER_DETAILS_UPDATE_REQUEST';\nexport const USER_DETAILS_UPDATE_SUCCESS = 'USER_DETAILS_UPDATE_SUCCESS';\nexport const USER_DETAILS_UPDATE_FAIL = 'USER_DETAILS_UPDATE_FAIL';\n\nexport const USER_PASSWORD_UPDATE_REQUEST = 'USER_PASSWORD_UPDATE_REQUEST';\nexport const USER_PASSWORD_UPDATE_SUCCESS = 'USER_PASSWORD_UPDATE_SUCCESS';\nexport const USER_PASSWORD_UPDATE_FAIL = 'USER_PASSWORD_UPDATE_FAIL';\n\nexport const CLEAR_AUTH_ERROR = 'CLEAR_AUTH_ERROR';\nexport const CLEAR_AUTH_SUCCESS = 'CLEAR_AUTH_SUCCESS';\n","export const BOOKING_CREATE_REQUEST = 'BOOKING_CREATE_REQUEST';\nexport const BOOKING_CREATE_SUCCESS = 'BOOKING_CREATE_SUCCESS';\nexport const BOOKING_CREATE_FAIL = 'BOOKING_CREATE_FAIL';\nexport const BOOKING_STATUS_RESET = 'BOOKING_STATUS_RESET';\n\nexport const USER_BOOKINGS_REQUEST = 'USER_BOOKINGS_REQUEST';\nexport const USER_BOOKINGS_SUCCESS = 'USER_BOOKINGS_SUCCESS';\nexport const USER_BOOKINGS_FAIL = 'USER_BOOKINGS_FAIL';\n\nexport const BOOKING_ALL_REQUEST = 'BOOKING_ALL_REQUEST';\nexport const BOOKING_ALL_SUCCESS = 'BOOKING_ALL_SUCCESS';\nexport const BOOKING_ALL_FAIL = 'BOOKING_ALL_FAIL';\nexport const BOOKING_ALL_RESET = 'BOOKING_ALL_RESET';\n\nexport const BOOKING_APPROVE_REQUEST = 'BOOKING_APPROVE_REQUEST';\nexport const BOOKING_APPROVE_SUCCESS = 'BOOKING_APPROVE_SUCCESS';\nexport const BOOKING_APPROVE_FAIL = 'BOOKING_APPROVE_FAIL';\nexport const BOOKING_APPROVE_RESET = 'BOOKING_APPROVE_RESET';\n\nexport const BOOKING_DELETE_REQUEST = 'BOOKING_DELETE_REQUEST';\nexport const BOOKING_DELETE_SUCCESS = 'BOOKING_DELETE_SUCCESS';\nexport const BOOKING_DELETE_FAIL = 'BOOKING_DELETE_FAIL';\nexport const BOOKING_DELETE_RESET = 'BOOKING_DELETE_RESET';\n","export const SET_MESSAGE = 'SET_MESSAGE';\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE';\n","export const DAY_LIST_REQUEST = 'DAY_LIST_REQUEST';\nexport const DAY_LIST_SUCCESS = 'DAY_LIST_SUCCESS';\nexport const DAY_LIST_FAIL = 'DAY_LIST_FAIL';\n\nexport const DAY_REQUEST = 'DAY_REQUEST';\nexport const DAY_SUCCESS = 'DAY_SUCCESS';\nexport const DAY_FAIL = 'DAY_FAIL';\n\nexport const DAY_UPDATE_REQUEST = 'DAY_UPDATE_REQUEST';\nexport const DAY_UPDATE_SUCCESS = 'DAY_UPDATE_SUCCESS';\nexport const DAY_UPDATE_FAIL = 'DAY_UPDATE_FAIL';\n\nexport const CLEAR_DAY_SUCCESS = 'CLEAR_DAY_SUCCESS';\nexport const CLEAR_DAY_ERROR = 'CLEAR_DAY_ERROR';\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { availableHourReducer } from './reducers/availableHourReducers';\nimport { userAuthReducer } from './reducers/userReducers';\nimport {\n  newBookingReducer,\n  userBookingsReducer,\n  allBookingsReducer,\n  bookingApproveReducer,\n  bookingDeleteReducer,\n} from './reducers/bookingReducers';\nimport { messageReducer } from './reducers/messageReducers';\nimport { dayReducer } from './reducers/dayReducers';\n\nconst reducer = combineReducers({\n  availableHourDetails: availableHourReducer,\n  userAuth: userAuthReducer,\n  newBooking: newBookingReducer,\n  userBookings: userBookingsReducer,\n  allBookings: allBookingsReducer,\n  bookingApprove: bookingApproveReducer,\n  bookingDelete: bookingDeleteReducer,\n  message: messageReducer,\n  dayDetails: dayReducer,\n});\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  AVAILABLE_HOUR_REQUEST,\n  AVAILABLE_HOUR_SUCCESS,\n  AVAILABLE_HOUR_FAIL,\n  TOGGLE_SELECTED_HOUR,\n  SET_AVAILABLE_HOUR_DATE,\n} from '../constants/availableHourConstants';\n\nexport const availableHourReducer = (\n  state = {\n    loading: false,\n    date: null,\n    availableHours: [],\n    error: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case AVAILABLE_HOUR_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        availableHours: [],\n      };\n    case AVAILABLE_HOUR_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        availableHours: action.payload,\n      };\n    case AVAILABLE_HOUR_FAIL:\n      return {\n        ...state,\n        loading: false,\n        availableHours: [],\n        error: action.payload,\n      };\n    case TOGGLE_SELECTED_HOUR:\n      return {\n        ...state,\n        availableHours: state.availableHours.map(ava => {\n          if (ava._id === action.payload) {\n            ava.selected = !ava.selected;\n          }\n          return ava;\n        }),\n      };\n    case SET_AVAILABLE_HOUR_DATE:\n      return {\n        ...state,\n        date: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOAD_REQUEST,\n  USER_LOAD_SUCCESS,\n  USER_LOAD_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_SIGNUP_REQUEST,\n  USER_SIGNUP_SUCCESS,\n  USER_SIGNUP_FAIL,\n  USER_LOGOUT,\n  CLEAR_AUTH_ERROR,\n  CLEAR_AUTH_SUCCESS,\n  USER_DETAILS_UPDATE_REQUEST,\n  USER_DETAILS_UPDATE_SUCCESS,\n  USER_DETAILS_UPDATE_FAIL,\n  USER_PASSWORD_UPDATE_REQUEST,\n  USER_PASSWORD_UPDATE_SUCCESS,\n  USER_PASSWORD_UPDATE_FAIL,\n} from '../constants/userConstants';\n\nexport const userAuthReducer = (\n  state = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    loading: true,\n    user: null,\n    success: null,\n    error: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case USER_SIGNUP_REQUEST:\n    case USER_LOGIN_REQUEST:\n    case USER_LOAD_REQUEST:\n      return {\n        ...state,\n        isAuthenticated: false,\n        loading: true,\n        user: null,\n        success: null,\n        error: null,\n      };\n    case USER_PASSWORD_UPDATE_REQUEST:\n    case USER_DETAILS_UPDATE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_DETAILS_UPDATE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        user: action.payload.user,\n        success: action.payload.success,\n      };\n    case USER_PASSWORD_UPDATE_FAIL:\n    case USER_DETAILS_UPDATE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LOAD_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n        error: null,\n      };\n    case USER_SIGNUP_FAIL:\n    case USER_LOGIN_FAIL:\n    case USER_LOAD_FAIL:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    case USER_PASSWORD_UPDATE_SUCCESS:\n    case USER_SIGNUP_SUCCESS:\n    case USER_LOGIN_SUCCESS:\n      return {\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload.user,\n        success: action.payload.success,\n        error: null,\n      };\n    case USER_LOGOUT:\n      return {\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: null,\n      };\n    case CLEAR_AUTH_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n    case CLEAR_AUTH_SUCCESS:\n      return {\n        ...state,\n        success: null,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  BOOKING_CREATE_REQUEST,\n  BOOKING_CREATE_SUCCESS,\n  BOOKING_CREATE_FAIL,\n  BOOKING_STATUS_RESET,\n  USER_BOOKINGS_REQUEST,\n  USER_BOOKINGS_SUCCESS,\n  USER_BOOKINGS_FAIL,\n  BOOKING_ALL_REQUEST,\n  BOOKING_ALL_SUCCESS,\n  BOOKING_ALL_FAIL,\n  BOOKING_APPROVE_REQUEST,\n  BOOKING_APPROVE_SUCCESS,\n  BOOKING_APPROVE_FAIL,\n  BOOKING_APPROVE_RESET,\n  BOOKING_ALL_RESET,\n  BOOKING_DELETE_REQUEST,\n  BOOKING_DELETE_SUCCESS,\n  BOOKING_DELETE_FAIL,\n  BOOKING_DELETE_RESET,\n} from '../constants/bookingConstants';\n\nexport const newBookingReducer = (\n  state = {\n    loading: false,\n    success: null,\n    error: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case BOOKING_CREATE_REQUEST:\n      return {\n        loading: true,\n        success: null,\n        error: null,\n      };\n    case BOOKING_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: action.payload,\n        error: null,\n      };\n    case BOOKING_CREATE_FAIL:\n      return {\n        loading: false,\n        success: false,\n        error: action.payload,\n      };\n    case BOOKING_STATUS_RESET:\n      return {\n        loading: false,\n        success: null,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userBookingsReducer = (\n  state = {\n    loading: false,\n    bookings: [],\n    error: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case USER_BOOKINGS_REQUEST:\n      return {\n        loading: true,\n        bookings: [],\n        error: null,\n      };\n    case USER_BOOKINGS_SUCCESS:\n      return {\n        loading: false,\n        bookings: action.payload,\n        error: null,\n      };\n    case USER_BOOKINGS_FAIL:\n      return {\n        loading: false,\n        bookings: [],\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const allBookingsReducer = (\n  state = {\n    loading: false,\n    bookings: [],\n    allTotal: 0,\n    error: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case BOOKING_ALL_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        bookings: [],\n        error: null,\n      };\n    case BOOKING_ALL_SUCCESS:\n      return {\n        loading: false,\n        bookings: action.payload.bookings,\n        allTotal: action.payload.allTotal,\n        error: null,\n      };\n    case BOOKING_ALL_FAIL:\n      return {\n        loading: false,\n        bookings: [],\n        allTotal: 0,\n        error: action.payload,\n      };\n    case BOOKING_ALL_RESET:\n      return {\n        loading: false,\n        bookings: [],\n        allTotal: 0,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const bookingApproveReducer = (\n  state = {\n    bookingId: null,\n    loading: false,\n    error: null,\n    success: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case BOOKING_APPROVE_REQUEST:\n      return {\n        bookingId: action.payload,\n        loading: true,\n        error: null,\n        success: null,\n      };\n    case BOOKING_APPROVE_SUCCESS:\n      return {\n        bookingId: null,\n        loading: false,\n        error: null,\n        success: action.payload,\n      };\n    case BOOKING_APPROVE_FAIL:\n      return {\n        bookingId: null,\n        loading: false,\n        error: action.payload,\n        success: null,\n      };\n    case BOOKING_APPROVE_RESET:\n      return {\n        bookingId: null,\n        loading: false,\n        error: null,\n        success: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const bookingDeleteReducer = (\n  state = {\n    bookingId: null,\n    loading: false,\n    error: null,\n    success: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case BOOKING_DELETE_REQUEST:\n      return {\n        bookingId: action.payload,\n        loading: true,\n        error: null,\n        success: null,\n      };\n    case BOOKING_DELETE_SUCCESS:\n      return {\n        bookingId: null,\n        loading: false,\n        error: null,\n        success: action.payload,\n      };\n    case BOOKING_DELETE_FAIL:\n      return {\n        bookingId: null,\n        loading: false,\n        error: action.payload,\n        success: null,\n      };\n    case BOOKING_DELETE_RESET:\n      return {\n        bookingId: null,\n        loading: false,\n        error: null,\n        success: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_MESSAGE, REMOVE_MESSAGE } from '../constants/messageConstants';\n\nexport const messageReducer = (\n  state = {\n    message: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case SET_MESSAGE:\n      return {\n        message: action.payload,\n      };\n    case REMOVE_MESSAGE:\n      return {\n        message: null,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  DAY_LIST_REQUEST,\n  DAY_LIST_SUCCESS,\n  DAY_LIST_FAIL,\n  DAY_REQUEST,\n  DAY_SUCCESS,\n  DAY_FAIL,\n  DAY_UPDATE_REQUEST,\n  DAY_UPDATE_SUCCESS,\n  DAY_UPDATE_FAIL,\n  CLEAR_DAY_SUCCESS,\n  CLEAR_DAY_ERROR,\n} from '../constants/dayConstants';\n\nexport const dayReducer = (\n  state = {\n    days: [],\n    day: null,\n    loading: false,\n    error: null,\n    success: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case DAY_LIST_REQUEST:\n      return {\n        ...state,\n        days: [],\n        loading: true,\n        error: null,\n      };\n    case DAY_LIST_SUCCESS:\n      return {\n        ...state,\n        days: action.payload,\n        loading: false,\n        error: null,\n      };\n    case DAY_LIST_FAIL:\n      return {\n        ...state,\n        days: [],\n        loading: false,\n        error: action.payload,\n      };\n    case DAY_REQUEST:\n      return {\n        ...state,\n        day: null,\n        loading: true,\n        error: null,\n      };\n    case DAY_SUCCESS:\n      return {\n        ...state,\n        day: action.payload,\n        loading: false,\n        error: null,\n      };\n    case DAY_FAIL:\n      return {\n        ...state,\n        day: null,\n        loading: false,\n        error: action.payload,\n      };\n    case DAY_UPDATE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n        success: null,\n      };\n    case DAY_UPDATE_SUCCESS:\n      return {\n        ...state,\n        day: action.payload.day,\n        loading: false,\n        error: null,\n        success: action.payload.success,\n      };\n    case DAY_UPDATE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        success: null,\n      };\n    case CLEAR_DAY_SUCCESS:\n      return {\n        ...state,\n        success: null,\n      };\n    case CLEAR_DAY_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\nimport {\n  USER_LOAD_REQUEST,\n  USER_LOAD_SUCCESS,\n  USER_LOAD_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_SIGNUP_REQUEST,\n  USER_SIGNUP_SUCCESS,\n  USER_SIGNUP_FAIL,\n  USER_LOGOUT,\n  CLEAR_AUTH_ERROR,\n  CLEAR_AUTH_SUCCESS,\n  USER_DETAILS_UPDATE_REQUEST,\n  USER_DETAILS_UPDATE_SUCCESS,\n  USER_DETAILS_UPDATE_FAIL,\n  USER_PASSWORD_UPDATE_REQUEST,\n  USER_PASSWORD_UPDATE_SUCCESS,\n  USER_PASSWORD_UPDATE_FAIL,\n} from '../constants/userConstants';\n\nexport const loadUser = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LOAD_REQUEST });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    if (!token) {\n      throw new Error();\n    }\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const {\n      data: {\n        data: { user },\n      },\n    } = await axios.get('/api/v1/users/me', config);\n\n    dispatch({ type: USER_LOAD_SUCCESS, payload: user });\n  } catch (error) {\n    localStorage.removeItem('token');\n\n    dispatch({\n      type: USER_LOAD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const login = values => async dispatch => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const {\n      data: {\n        token,\n        data: { user },\n      },\n    } = await axios.post('/api/v1/users/login', values, config);\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: { token, user },\n    });\n\n    localStorage.setItem('token', token);\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signup = values => async dispatch => {\n  try {\n    dispatch({ type: USER_SIGNUP_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const {\n      data: {\n        token,\n        data: { user },\n      },\n    } = await axios.post('/api/v1/users/signup', values, config);\n\n    dispatch({\n      type: USER_SIGNUP_SUCCESS,\n      payload: { token, user },\n    });\n\n    localStorage.setItem('token', token);\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNUP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('token');\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const updateUserDetails = details => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_UPDATE_REQUEST });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const {\n      data: {\n        data: { user },\n      },\n    } = await axios.patch('/api/v1/users/updateMe', details, config);\n\n    dispatch({\n      type: USER_DETAILS_UPDATE_SUCCESS,\n      payload: { user, success: 'User updated successfully' },\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserPassword = values => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_PASSWORD_UPDATE_REQUEST });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const {\n      data: {\n        token: newToken,\n        data: { user },\n      },\n    } = await axios.patch('/api/v1/users/updateMyPassword', values, config);\n\n    dispatch({\n      type: USER_PASSWORD_UPDATE_SUCCESS,\n      payload: {\n        token: newToken,\n        user,\n        success: 'User password updated successfully',\n      },\n    });\n\n    localStorage.setItem('token', newToken);\n  } catch (error) {\n    dispatch({\n      type: USER_PASSWORD_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const clearAuthError = () => dispatch => {\n  dispatch({ type: CLEAR_AUTH_ERROR });\n};\n\nexport const clearAuthSuccess = () => dispatch => {\n  dispatch({ type: CLEAR_AUTH_SUCCESS });\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { logout } from '../actions/userActions';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, user } = useSelector(state => state.userAuth);\n\n  const isAdmin = user && user.role === 'admin';\n\n  return (\n    <div>\n      <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand className='d-flex align-items-center'>\n              <i\n                className='far fa-futbol mr-1'\n                style={{ fontSize: '40px' }}\n              ></i>{' '}\n              <span style={{ fontSize: '30px' }}>Futsal</span>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              {isAuthenticated ? (\n                <>\n                  {isAdmin && (\n                    <NavDropdown title='Manage' id='manage'>\n                      <LinkContainer to='/admin/days'>\n                        <NavDropdown.Item>Days</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to='/admin/bookings'>\n                        <NavDropdown.Item>Bookings</NavDropdown.Item>\n                      </LinkContainer>\n                    </NavDropdown>\n                  )}\n                  <LinkContainer to='/profile'>\n                    <Nav.Link>Profile</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to='#!'>\n                    <Nav.Link onClick={() => dispatch(logout())}>\n                      Logout\n                    </Nav.Link>\n                  </LinkContainer>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to='/login'>\n                    <Nav.Link>Login</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to='/signup'>\n                    <Nav.Link>Signup</Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","import { SET_MESSAGE, REMOVE_MESSAGE } from '../constants/messageConstants';\n\nexport const setMessage = message => dispatch => {\n  dispatch({ type: SET_MESSAGE, payload: message });\n};\n\nexport const removeMessage = () => dispatch => {\n  dispatch({ type: REMOVE_MESSAGE });\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert, Row, Col } from 'react-bootstrap';\n\nimport { removeMessage } from '../actions/messageActions';\n\nconst Message = () => {\n  const dispatch = useDispatch();\n\n  const { message } = useSelector(state => state.message);\n\n  return (\n    message && (\n      <Row>\n        <Col md={7} className='mx-auto mt-4'>\n          <Alert\n            variant={message.type}\n            onClose={() => dispatch(removeMessage())}\n            dismissible\n          >\n            {message && message.text}\n          </Alert>\n        </Col>\n      </Row>\n    )\n  );\n};\n\nexport default Message;\n","import axios from 'axios';\nimport {\n  AVAILABLE_HOUR_REQUEST,\n  AVAILABLE_HOUR_SUCCESS,\n  AVAILABLE_HOUR_FAIL,\n  TOGGLE_SELECTED_HOUR,\n  SET_AVAILABLE_HOUR_DATE,\n} from '../constants/availableHourConstants';\n\nexport const getAvailableHours = date => async dispatch => {\n  try {\n    dispatch({ type: AVAILABLE_HOUR_REQUEST });\n\n    const res = await axios.get('/api/v1/days/available', {\n      headers: {\n        'x-date': date,\n      },\n    });\n\n    dispatch({\n      type: AVAILABLE_HOUR_SUCCESS,\n      payload: res.data.data.availableHours,\n    });\n  } catch (error) {\n    dispatch({\n      type: AVAILABLE_HOUR_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const toggleSelectedHour = id => dispatch => {\n  dispatch({ type: TOGGLE_SELECTED_HOUR, payload: id });\n};\n\nexport const setDate = date => dispatch => {\n  dispatch({ type: SET_AVAILABLE_HOUR_DATE, payload: date });\n};\n","const formatDate = date => {\n  const dateObject = new Date(date);\n  return `${dateObject.getFullYear()}/${\n    dateObject.getMonth() + 1\n  }/${dateObject.getDate()}`;\n};\n\nexport default formatDate;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nimport {\n  getAvailableHours,\n  setDate as setAvaDate,\n} from '../actions/availableHourActions';\nimport formatDate from '../utils/formatDate';\n\nconst DatePicker = () => {\n  const [date, setDate] = useState(new Date());\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const formattedDate = formatDate(date);\n    dispatch(setAvaDate(formattedDate));\n    dispatch(getAvailableHours(formattedDate));\n  }, [date, dispatch]);\n\n  return (\n    <div>\n      <Calendar\n        onChange={date => setDate(date)}\n        value={date}\n        minDate={new Date()}\n      />\n    </div>\n  );\n};\n\nexport default DatePicker;\n","import axios from 'axios';\nimport {\n  BOOKING_CREATE_REQUEST,\n  BOOKING_CREATE_SUCCESS,\n  BOOKING_CREATE_FAIL,\n  BOOKING_STATUS_RESET,\n  USER_BOOKINGS_REQUEST,\n  USER_BOOKINGS_SUCCESS,\n  USER_BOOKINGS_FAIL,\n  BOOKING_ALL_REQUEST,\n  BOOKING_ALL_SUCCESS,\n  BOOKING_ALL_FAIL,\n  BOOKING_APPROVE_REQUEST,\n  BOOKING_APPROVE_SUCCESS,\n  BOOKING_APPROVE_FAIL,\n  BOOKING_APPROVE_RESET,\n  BOOKING_ALL_RESET,\n  BOOKING_DELETE_REQUEST,\n  BOOKING_DELETE_SUCCESS,\n  BOOKING_DELETE_FAIL,\n  BOOKING_DELETE_RESET,\n} from '../constants/bookingConstants';\n\nexport const createNewBooking = newBookings => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BOOKING_CREATE_REQUEST });\n\n    const {\n      userAuth: { token },\n      availableHourDetails: { date },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.post(\n      '/api/v1/bookings',\n      {\n        date,\n        time: newBookings,\n      },\n      config\n    );\n\n    dispatch({\n      type: BOOKING_CREATE_SUCCESS,\n      payload: 'Booking created successfully',\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const resetBookingStatus = () => dispatch => {\n  dispatch({ type: BOOKING_STATUS_RESET });\n};\n\nexport const getUserBookings = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_BOOKINGS_REQUEST });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const {\n      data: {\n        data: { bookings },\n      },\n    } = await axios.get('/api/v1/bookings/getMyBookings', config);\n\n    dispatch({\n      type: USER_BOOKINGS_SUCCESS,\n      payload: bookings,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_BOOKINGS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getAllBookings = (perPage, currentPage) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: BOOKING_ALL_REQUEST });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const {\n      data: {\n        allTotal,\n        data: { bookings },\n      },\n    } = await axios.get(\n      `/api/v1/bookings?limit=${perPage}&page=${currentPage}`,\n      config\n    );\n\n    dispatch({\n      type: BOOKING_ALL_SUCCESS,\n      payload: { bookings, allTotal },\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_ALL_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const resetAllBookings = () => dispatch => {\n  dispatch({ type: BOOKING_ALL_RESET });\n};\n\nexport const approveBooking = id => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BOOKING_APPROVE_REQUEST, payload: id });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.patch(\n      `/api/v1/bookings/${id}`,\n      { status: 'confirmed' },\n      config\n    );\n\n    dispatch({\n      type: BOOKING_APPROVE_SUCCESS,\n      payload: 'Booking approved successfully.',\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_APPROVE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const resetBookingApprove = () => dispatch => {\n  dispatch({ type: BOOKING_APPROVE_RESET });\n};\n\nexport const deleteBooking = id => async (dispatch, getState) => {\n  try {\n    dispatch({ type: BOOKING_DELETE_REQUEST, payload: id });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.delete(`/api/v1/bookings/${id}`, config);\n\n    dispatch({\n      type: BOOKING_DELETE_SUCCESS,\n      payload: 'Booking deleted successfully.',\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const resetBookingDelete = () => dispatch => {\n  dispatch({ type: BOOKING_DELETE_RESET });\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\nimport { animated, useSpring } from 'react-spring';\n\nimport {\n  createNewBooking,\n  resetBookingStatus,\n} from '../actions/bookingActions';\nimport { getAvailableHours } from '../actions/availableHourActions';\nimport { setMessage } from '../actions/messageActions';\n\nconst Fab = ({ showFab }) => {\n  const dispatch = useDispatch();\n\n  const { availableHours, date } = useSelector(\n    state => state.availableHourDetails\n  );\n  const { loading, success, error } = useSelector(state => state.newBooking);\n  const { isAuthenticated } = useSelector(state => state.userAuth);\n\n  const animation = useSpring({\n    opacity: showFab ? 1 : 0,\n    transform: showFab ? 'translateY(0)' : 'translateY(100%)',\n  });\n\n  const handleSubmit = () => {\n    if (isAuthenticated) {\n      if (!loading) {\n        const hoursToOrder = availableHours\n          .filter(ava => ava.selected)\n          .map(ava => ava._id);\n        dispatch(createNewBooking(hoursToOrder));\n      }\n    } else {\n      dispatch(setMessage({ text: 'Please log in to book', type: 'warning' }));\n    }\n  };\n\n  useEffect(() => {\n    if (success) {\n      dispatch(setMessage({ text: success, type: 'success' }));\n      dispatch(getAvailableHours(date));\n      dispatch(resetBookingStatus());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [success]);\n\n  useEffect(() => {\n    if (error) {\n      dispatch(setMessage({ text: error, type: 'danger' }));\n      dispatch(getAvailableHours(date));\n      dispatch(resetBookingStatus());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  return (\n    <animated.div\n      style={animation}\n      className='fab bg-info'\n      onClick={handleSubmit}\n    >\n      {loading ? (\n        <Spinner\n          as='span'\n          animation='border'\n          role='status'\n          aria-hidden='true'\n          id='loading'\n        />\n      ) : (\n        <i className='fas fa-check'></i>\n      )}\n    </animated.div>\n  );\n};\n\nexport default Fab;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Col } from 'react-bootstrap';\n\nimport { toggleSelectedHour } from '../actions/availableHourActions';\n\nconst AvailableHour = ({ availableHour }) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (!availableHour.booked) {\n      dispatch(toggleSelectedHour(availableHour._id));\n    }\n  };\n\n  return (\n    <Col xs={6} md={4} lg={3}>\n      <div\n        onClick={handleClick}\n        className={`available-hour mx-auto text-center m-2 bg-primary text-white ${\n          availableHour.booked\n            ? 'available-hour-booked bg-danger'\n            : availableHour.selected && 'bg-secondary'\n        }`}\n      >\n        {availableHour.booked ? 'Booked' : availableHour.time}\n        {availableHour.selected && <i className='fas fa-check ml-1' />}\n      </div>\n    </Col>\n  );\n};\n\nexport default AvailableHour;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Row, Spinner } from 'react-bootstrap';\n\nimport AvailableHour from './AvailableHour';\n\nconst AvailableHours = () => {\n  const { loading, availableHours } = useSelector(\n    state => state.availableHourDetails\n  );\n\n  return (\n    <Row>\n      {loading ? (\n        <Spinner\n          animation='grow'\n          variant='primary'\n          style={{ width: '50px', height: '50px' }}\n          className='mx-auto my-5'\n        />\n      ) : (\n        availableHours.map(ava => (\n          <AvailableHour key={ava._id} availableHour={ava} />\n        ))\n      )}\n    </Row>\n  );\n};\n\nexport default AvailableHours;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\n\nimport DatePicker from '../components/DatePicker';\nimport Fab from '../components/Fab';\nimport AvailableHours from '../components/AvailableHours';\n\nconst HomeScreen = () => {\n  const { availableHours } = useSelector(state => state.availableHourDetails);\n  const showFab = availableHours.find(ava => ava.selected === true);\n\n  return (\n    <Row>\n      <Col md={5} lg={4} xl={3}>\n        <DatePicker />\n      </Col>\n      <Col md={7} lg={8} xl={9}>\n        <h3 className='text-center mt-3'>Pick the sections</h3>\n        <AvailableHours />\n      </Col>\n\n      <Fab showFab={showFab} />\n    </Row>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button, Spinner } from 'react-bootstrap';\n\nimport {\n  updateUserDetails,\n  clearAuthSuccess,\n  clearAuthError,\n} from '../actions/userActions';\nimport { setMessage } from '../actions/messageActions';\n\nconst UserDetailsUpdate = () => {\n  const dispatch = useDispatch();\n\n  const { user, loading, success, error } = useSelector(\n    state => state.userAuth\n  );\n\n  const { handleSubmit, register, errors } = useForm();\n\n  useEffect(() => {\n    if (success) {\n      dispatch(setMessage({ text: success, type: 'success' }));\n      dispatch(clearAuthSuccess());\n    }\n\n    if (error) {\n      dispatch(setMessage({ text: error, type: 'danger' }));\n      dispatch(clearAuthError());\n    }\n  }, [success, error, dispatch]);\n\n  const onSubmit = values => dispatch(updateUserDetails(values));\n\n  return (\n    <>\n      <h3 className='text-center'>Your Account</h3>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            defaultValue={user && user.name}\n            type='text'\n            name='name'\n            placeholder='Enter Name'\n            ref={register({\n              required: 'Name is required',\n            })}\n          />\n          {errors.name && (\n            <Form.Text className='text-danger'>{errors.name.message}</Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId='phone'>\n          <Form.Label>Phone</Form.Label>\n          <Form.Control\n            defaultValue={user && user.phone}\n            type='number'\n            name='phone'\n            placeholder='Enter phone'\n            ref={register({\n              required: 'Phone number is required',\n            })}\n          />\n          {errors.phone && (\n            <Form.Text className='text-danger'>\n              {errors.phone.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Button variant='primary' type='submit' disabled={loading}>\n          {loading ? 'Loading' : 'Update'}\n          {loading && (\n            <Spinner\n              as='span'\n              animation='border'\n              size='sm'\n              role='status'\n              aria-hidden='true'\n              className='ml-1'\n            />\n          )}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default UserDetailsUpdate;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Spinner } from 'react-bootstrap';\n\nimport formatDate from '../utils/formatDate';\nimport { getUserBookings } from '../actions/bookingActions';\n\nconst UserBookings = () => {\n  const dispatch = useDispatch();\n\n  const { loading, bookings } = useSelector(state => state.userBookings);\n\n  useEffect(() => {\n    dispatch(getUserBookings());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h3 className='text-center'>Your Bookings</h3>\n      <ListGroup variant='flush' className='text-center'>\n        {loading ? (\n          <Spinner\n            animation='grow'\n            variant='primary'\n            style={{ width: '50px', height: '50px' }}\n            className='mx-auto my-5'\n          />\n        ) : bookings.length === 0 ? (\n          <p>You have no bookings</p>\n        ) : (\n          bookings.map(booking => (\n            <ListGroup.Item key={booking._id}>\n              <Row>\n                <Col>{`${formatDate(booking.date)} ${booking.time.time}`}</Col>\n                <Col>\n                  <span\n                    className={\n                      booking.status === 'pending'\n                        ? 'text-warning'\n                        : 'text-success'\n                    }\n                  >\n                    {booking.status}\n                  </span>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          ))\n        )}\n      </ListGroup>\n    </>\n  );\n};\n\nexport default UserBookings;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button, Spinner } from 'react-bootstrap';\n\nimport {\n  updateUserPassword,\n  clearAuthSuccess,\n  clearAuthError,\n} from '../actions/userActions';\nimport { setMessage } from '../actions/messageActions';\n\nconst UserPasswordUpdate = () => {\n  const dispatch = useDispatch();\n\n  const { loading, success, error } = useSelector(state => state.userAuth);\n\n  const { handleSubmit, register, errors, getValues, reset } = useForm();\n\n  useEffect(() => {\n    if (success) {\n      dispatch(setMessage({ text: success, type: 'success' }));\n      dispatch(clearAuthSuccess());\n\n      // reset form after success\n      reset();\n    }\n\n    if (error) {\n      dispatch(setMessage({ text: error, type: 'danger' }));\n      dispatch(clearAuthError());\n    }\n  }, [success, error, dispatch, reset]);\n\n  const onSubmit = values => dispatch(updateUserPassword(values));\n\n  return (\n    <>\n      <h3 className='text-center'>Update Password</h3>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group controlId='currentPassword'>\n          <Form.Label>Current Password</Form.Label>\n          <Form.Control\n            type='password'\n            name='passwordCurrent'\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 8,\n                message: 'Password must have at least 8 characters',\n              },\n            })}\n          />\n          {errors.passwordCurrent && (\n            <Form.Text className='text-danger'>\n              {errors.passwordCurrent.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId='newPassword'>\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type='password'\n            name='password'\n            ref={register({\n              required: 'New password is required',\n              minLength: {\n                value: 8,\n                message: 'New password must have at least 8 characters',\n              },\n            })}\n          />\n          {errors.password && (\n            <Form.Text className='text-danger'>\n              {errors.password.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId='newPasswordConfirm'>\n          <Form.Label>Confirm New Password</Form.Label>\n          <Form.Control\n            type='password'\n            name='passwordConfirm'\n            ref={register({\n              validate: {\n                passwordsMatch: value =>\n                  value === getValues('password') || 'Passwords do not match',\n              },\n            })}\n          />\n          {errors.passwordConfirm && (\n            <Form.Text className='text-danger'>\n              {errors.passwordConfirm.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Button variant='primary' type='submit' disabled={loading}>\n          {loading ? 'Loading' : 'Update'}\n          {loading && (\n            <Spinner\n              as='span'\n              animation='border'\n              size='sm'\n              role='status'\n              aria-hidden='true'\n              className='ml-1'\n            />\n          )}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default UserPasswordUpdate;\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport UserDetailsUpdate from '../components/UserDetailsUpdate';\nimport UserBookings from '../components/UserBookings';\nimport UserPasswordUpdate from '../components/UserPasswordUpdate';\n\nconst ProfileScreen = () => {\n  return (\n    <Row className='mt-3'>\n      <Col md={6} className='mb-4'>\n        <UserBookings />\n      </Col>\n      <Col md={6} className='mb-4'>\n        <UserDetailsUpdate />\n      </Col>\n      <Col md={6} className='mb-4'>\n        <UserPasswordUpdate />\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import React from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nconst ConfirmBookingScreen = () => {\n  return (\n    <Row className='mt-3'>\n      <Col md={6} className='mx-auto'>\n        <h3 className='text-center'>Confirm Booking</h3>\n        <Form>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type='text' placeholder='Enter Name' />\n          </Form.Group>\n\n          <Form.Group controlId='phone'>\n            <Form.Label>Phone</Form.Label>\n            <Form.Control type='number' placeholder='Enter phone' />\n          </Form.Group>\n\n          <Form.Group controlId='note'>\n            <Form.Label>Note</Form.Label>\n            <Form.Control as='textarea' rows={4} placeholder='Enter note' />\n          </Form.Group>\n\n          <Button variant='primary' type='submit'>\n            Confirm\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ConfirmBookingScreen;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button, Spinner, Row, Col } from 'react-bootstrap';\n\nimport { login, clearAuthError } from '../actions/userActions';\nimport { setMessage } from '../actions/messageActions';\n\nconst LoginScreen = ({ location, history }) => {\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, loading, error } = useSelector(\n    state => state.userAuth\n  );\n  const { handleSubmit, register, errors } = useForm();\n  const { from } = location.state || { from: { pathname: '/' } };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(from.pathname);\n    }\n  }, [isAuthenticated, history, from.pathname]);\n\n  useEffect(() => {\n    if (error) {\n      dispatch(setMessage({ text: error, type: 'danger' }));\n      dispatch(clearAuthError());\n    }\n  }, [error, dispatch]);\n\n  const onSubmit = values => dispatch(login(values));\n\n  return (\n    <div className='mt-3'>\n      <Row>\n        <Col md={5} className='mx-auto'>\n          <h3 className='text-center'>Login</h3>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Group controlId='email'>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type='text'\n                name='email'\n                placeholder='Email'\n                ref={register({\n                  required: 'Email address is required',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Invalid email address',\n                  },\n                })}\n              />\n              {errors.email && (\n                <Form.Text className='text-danger'>\n                  {errors.email.message}\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                name='password'\n                placeholder='Password'\n                ref={register({\n                  required: 'Password is required',\n                  minLength: {\n                    value: 8,\n                    message: 'Password must have at least 8 characters',\n                  },\n                })}\n              />\n              {errors.password && (\n                <Form.Text className='text-danger'>\n                  {errors.password.message}\n                </Form.Text>\n              )}\n            </Form.Group>\n            <Button variant='primary' type='submit' disabled={loading}>\n              {loading ? 'Loading' : 'Submit'}\n              {loading && (\n                <Spinner\n                  as='span'\n                  animation='border'\n                  size='sm'\n                  role='status'\n                  aria-hidden='true'\n                  className='ml-1'\n                />\n              )}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button, Row, Col, Spinner } from 'react-bootstrap';\n\nimport { signup, clearAuthError } from '../actions/userActions';\nimport { setMessage } from '../actions/messageActions';\n\nconst SignupScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, loading, error } = useSelector(\n    state => state.userAuth\n  );\n  const { handleSubmit, register, errors, getValues } = useForm();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n    }\n  }, [isAuthenticated, history]);\n\n  useEffect(() => {\n    if (error) {\n      dispatch(setMessage({ text: error, type: 'danger' }));\n      dispatch(clearAuthError());\n    }\n  }, [error, dispatch]);\n\n  const onSubmit = values => dispatch(signup(values));\n\n  return (\n    <div className='mt-3'>\n      <Row>\n        <Col md={5} className='mx-auto'>\n          <h3 className='text-center'>Sign Up</h3>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                name='name'\n                placeholder='Name'\n                ref={register({\n                  required: 'Name is required',\n                })}\n              />\n              {errors.name && (\n                <Form.Text className='text-danger'>\n                  {errors.name.message}\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type='text'\n                name='email'\n                placeholder='Email'\n                ref={register({\n                  required: 'Email address is required',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Invalid email address',\n                  },\n                })}\n              />\n              {errors.email && (\n                <Form.Text className='text-danger'>\n                  {errors.email.message}\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId='phone'>\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                type='number'\n                name='phone'\n                placeholder='Phone Number'\n                ref={register({\n                  required: 'Phone number is required',\n                })}\n              />\n              {errors.phone && (\n                <Form.Text className='text-danger'>\n                  {errors.phone.message}\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                name='password'\n                placeholder='Password'\n                ref={register({\n                  required: 'Password is required',\n                  minLength: {\n                    value: 8,\n                    message: 'Password must have at least 8 characters',\n                  },\n                })}\n              />\n              {errors.password && (\n                <Form.Text className='text-danger'>\n                  {errors.password.message}\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId='passwordConfirm'>\n              <Form.Label>Password Confirm</Form.Label>\n              <Form.Control\n                type='password'\n                name='passwordConfirm'\n                placeholder='Password Confirm'\n                ref={register({\n                  validate: {\n                    passwordsMatch: value =>\n                      value === getValues('password') ||\n                      'Passwords do not match',\n                  },\n                })}\n              />\n              {errors.passwordConfirm && (\n                <Form.Text className='text-danger'>\n                  {errors.passwordConfirm.message}\n                </Form.Text>\n              )}\n            </Form.Group>\n            <Button variant='primary' type='submit' disabled={loading}>\n              {loading ? 'Loading' : 'Submit'}\n              {loading && (\n                <Spinner\n                  as='span'\n                  animation='border'\n                  size='sm'\n                  role='status'\n                  aria-hidden='true'\n                  className='ml-1'\n                />\n              )}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default SignupScreen;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Spinner, Table } from 'react-bootstrap';\nimport { getAllDays } from '../actions/dayActions';\n\nconst DaysListScreen = () => {\n  const dispatch = useDispatch();\n\n  const { days, loading } = useSelector(state => state.dayDetails);\n\n  useEffect(() => {\n    dispatch(getAllDays());\n  }, [dispatch]);\n\n  return (\n    <Container className='py-3'>\n      <h3 className='text-center mb-3'>Manage days</h3>\n      {loading ? (\n        <Spinner\n          animation='border'\n          variant='primary'\n          style={{ width: '50px', height: '50px' }}\n          className='d-block mx-auto my-5'\n        />\n      ) : (\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Day</th>\n              <th>Sections</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {days.map((day, index) => (\n              <tr key={day._id}>\n                <td>{index + 1}</td>\n                <td>{day.day}</td>\n                <td>{day.openHours.length} Sections</td>\n                <td>\n                  <Link\n                    to={`/admin/days/${day._id}/edit`}\n                    className='btn btn-warning btn-sm'\n                  >\n                    <i className='fas fa-edit'></i>\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </Container>\n  );\n};\n\nexport default DaysListScreen;\n","import axios from 'axios';\nimport {\n  DAY_LIST_REQUEST,\n  DAY_LIST_SUCCESS,\n  DAY_LIST_FAIL,\n  DAY_REQUEST,\n  DAY_SUCCESS,\n  DAY_FAIL,\n  DAY_UPDATE_REQUEST,\n  DAY_UPDATE_SUCCESS,\n  DAY_UPDATE_FAIL,\n  CLEAR_DAY_ERROR,\n  CLEAR_DAY_SUCCESS,\n} from '../constants/dayConstants';\n\nexport const getAllDays = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: DAY_LIST_REQUEST });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const {\n      data: {\n        data: { days },\n      },\n    } = await axios.get('/api/v1/days', config);\n\n    dispatch({\n      type: DAY_LIST_SUCCESS,\n      payload: days,\n    });\n  } catch (error) {\n    dispatch({\n      type: DAY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getDay = id => async (dispatch, getState) => {\n  try {\n    dispatch({ type: DAY_REQUEST });\n\n    const {\n      userAuth: { token },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const {\n      data: {\n        data: { day },\n      },\n    } = await axios.get(`/api/v1/days/${id}`, config);\n\n    dispatch({\n      type: DAY_SUCCESS,\n      payload: day,\n    });\n  } catch (error) {\n    dispatch({\n      type: DAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateDay = openHours => async (dispatch, getState) => {\n  try {\n    dispatch({ type: DAY_UPDATE_REQUEST });\n\n    const {\n      userAuth: { token },\n      dayDetails: { day },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const {\n      data: { data },\n    } = await axios.patch(`/api/v1/days/${day._id}`, { openHours }, config);\n\n    dispatch({\n      type: DAY_UPDATE_SUCCESS,\n      payload: { day: data.day, success: 'Day updated successfully' },\n    });\n  } catch (error) {\n    dispatch({\n      type: DAY_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const clearDayError = () => dispatch => {\n  dispatch({ type: CLEAR_DAY_ERROR });\n};\n\nexport const clearDaySuccess = () => dispatch => {\n  dispatch({ type: CLEAR_DAY_SUCCESS });\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { isAuthenticated, loading } = useSelector(state => state.userAuth);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isAuthenticated && !loading ? (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst RestrictRoute = ({ component: Component, allowed, ...rest }) => {\n  let { loading, user } = useSelector(state => state.userAuth);\n\n  if (!user) {\n    user = { role: '' };\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !loading && !allowed.includes(user.role) ? (\n          <Redirect to='/' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default RestrictRoute;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Col, Form, Row, Spinner } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  getDay,\n  updateDay,\n  clearDayError,\n  clearDaySuccess,\n} from '../actions/dayActions';\nimport { setMessage } from '../actions/messageActions';\n\nconst DayEditScreen = ({ match }) => {\n  const dispatch = useDispatch();\n\n  const [openHours, setOpenHours] = useState([]);\n  const { day, loading, error, success } = useSelector(\n    state => state.dayDetails\n  );\n  const { token } = useSelector(state => state.userAuth);\n\n  const showLoading = loading || openHours.length === 0;\n\n  const id = match.params.id;\n\n  useEffect(() => {\n    if (success) {\n      dispatch(setMessage({ text: success, type: 'success' }));\n      dispatch(clearDaySuccess());\n    }\n\n    if (error) {\n      dispatch(setMessage({ text: error, type: 'danger' }));\n      dispatch(clearDayError());\n    }\n  }, [success, error, dispatch]);\n\n  useEffect(() => {\n    dispatch(getDay(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (day) {\n      (async () => {\n        const { data } = await axios.get('/api/v1/openhours', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        const checkedHours = data.data.openHours.map(oh => {\n          if (day.openHours.find(oh2 => oh2._id === oh._id)) {\n            return {\n              ...oh,\n              selected: true,\n            };\n          }\n          return oh;\n        });\n\n        if (isSubscribed) {\n          setOpenHours(checkedHours);\n        }\n      })();\n    }\n\n    return () => (isSubscribed = false);\n  }, [day, token]);\n\n  const toggleSelected = id =>\n    setOpenHours(\n      openHours.map(openHour =>\n        openHour._id === id\n          ? { ...openHour, selected: !openHour.selected }\n          : openHour\n      )\n    );\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const hoursToUpdate = openHours\n      .filter(openHour => openHour.selected)\n      .map(openHour => openHour._id);\n\n    setOpenHours([]);\n\n    dispatch(updateDay(hoursToUpdate));\n  };\n\n  return (\n    <div className='py-3'>\n      <h3 className='text-center mb-2'>{day && day.day}</h3>\n\n      <Form onSubmit={submitHandler}>\n        {showLoading ? (\n          <Spinner\n            animation='border'\n            variant='primary'\n            style={{ width: '50px', height: '50px' }}\n            className='d-block mx-auto my-5'\n          />\n        ) : (\n          <>\n            <LinkContainer to='/admin/days'>\n              <Button variant='light' className='my-2'>\n                Go Back\n              </Button>\n            </LinkContainer>\n            <Row>\n              {openHours.map(openHour => (\n                <Col\n                  key={openHour._id}\n                  xs={6}\n                  md={3}\n                  className='my-2  text-md-left'\n                >\n                  <Form.Check\n                    type='checkbox'\n                    label={openHour.time}\n                    checked={openHour.selected || false}\n                    onChange={() => toggleSelected(openHour._id)}\n                  />\n                </Col>\n              ))}\n            </Row>\n          </>\n        )}\n\n        <Button\n          variant='primary'\n          className='mt-3'\n          type='submit'\n          disabled={showLoading}\n        >\n          {showLoading ? 'Loading' : 'Submit'}\n          {showLoading && (\n            <Spinner\n              as='span'\n              animation='border'\n              size='sm'\n              role='status'\n              aria-hidden='true'\n              className='ml-1'\n            />\n          )}\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default DayEditScreen;\n","const getDay = dt => {\n  const date = new Date(dt);\n  const days = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return days[date.getDay()];\n};\n\nexport default getDay;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport { Button, Container, Form, Spinner, Table } from 'react-bootstrap';\nimport {\n  getAllBookings,\n  resetAllBookings,\n  approveBooking,\n  resetBookingApprove,\n  deleteBooking,\n  resetBookingDelete,\n} from '../actions/bookingActions';\nimport { setMessage } from '../actions/messageActions';\nimport formatDate from '../utils/formatDate';\nimport getDay from '../utils/getDay';\n\nconst BookingsListScreen = () => {\n  const dispatch = useDispatch();\n\n  const {\n    loading: loadingGetBookings,\n    bookings,\n    allTotal,\n    error: errorGetBookings,\n  } = useSelector(state => state.allBookings);\n\n  const {\n    bookingId: bookingToApprove,\n    loading: loadingApproveBooking,\n    error: errorApproveBooking,\n    success: successApproveBooking,\n  } = useSelector(state => state.bookingApprove);\n\n  const {\n    bookingId: bookingToDelete,\n    loading: loadingDeleteBooking,\n    error: errorDeleteBooking,\n    success: successDeleteBooking,\n  } = useSelector(state => state.bookingDelete);\n\n  const [perPage, setPerPage] = useState(50);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    dispatch(getAllBookings(perPage, currentPage));\n  }, [dispatch, perPage, currentPage]);\n\n  useEffect(() => {\n    if (successApproveBooking) {\n      dispatch(setMessage({ text: successApproveBooking, type: 'success' }));\n      dispatch(getAllBookings(perPage, currentPage));\n      dispatch(resetBookingApprove());\n    }\n\n    if (errorApproveBooking) {\n      dispatch(setMessage({ text: errorApproveBooking, type: 'danger' }));\n      dispatch(getAllBookings(perPage, currentPage));\n      dispatch(resetBookingApprove());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [successApproveBooking, errorApproveBooking, dispatch]);\n\n  useEffect(() => {\n    if (successDeleteBooking) {\n      dispatch(setMessage({ text: successDeleteBooking, type: 'success' }));\n      dispatch(getAllBookings(perPage, currentPage));\n      dispatch(resetBookingDelete());\n    }\n\n    if (errorDeleteBooking) {\n      dispatch(setMessage({ text: errorDeleteBooking, type: 'danger' }));\n      dispatch(getAllBookings(perPage, currentPage));\n      dispatch(resetBookingDelete());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [successDeleteBooking, errorDeleteBooking, dispatch]);\n\n  useEffect(() => {\n    if (errorGetBookings) {\n      dispatch(setMessage({ text: errorGetBookings, type: 'danger' }));\n      dispatch(resetAllBookings());\n    }\n  }, [errorGetBookings, dispatch]);\n\n  const handlePageClick = data => {\n    setCurrentPage(data.selected + 1);\n  };\n\n  const handleApprove = id => {\n    if (window.confirm('Approve this booking?')) {\n      dispatch(approveBooking(id));\n    }\n  };\n\n  const handleDelete = id => {\n    if (window.confirm('Delete this booking?')) {\n      dispatch(deleteBooking(id));\n    }\n  };\n\n  return (\n    <Container className='py-3'>\n      <h3 className='text-center mb-3'>Manage bookings</h3>\n      <Form.Group controlId='perPage' className='float-right'>\n        <Form.Label>Per page</Form.Label>\n        <Form.Control\n          as='select'\n          size='sm'\n          value={perPage}\n          onChange={e => setPerPage(e.target.value * 1)}\n        >\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n          <option value={150}>150</option>\n        </Form.Control>\n      </Form.Group>\n      {loadingGetBookings ? (\n        <Spinner\n          animation='border'\n          variant='primary'\n          style={{ width: '50px', height: '50px' }}\n          className='d-block mx-auto my-5'\n        />\n      ) : (\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>User</th>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Status</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {bookings.map((booking, index) => (\n              <tr key={booking._id}>\n                <td>{index + 1}</td>\n                <td>\n                  {booking.user.name} ({booking.user.email})\n                </td>\n                <td>\n                  {formatDate(booking.date)} ({getDay(booking.date)})\n                </td>\n                <td>{booking.time.time}</td>\n                <td>{booking.status}</td>\n                <td>\n                  {booking.status === 'pending' && (\n                    <Button\n                      variant='success'\n                      size='sm'\n                      className='mr-1 mb-1'\n                      onClick={() => handleApprove(booking._id)}\n                      disabled={\n                        loadingApproveBooking &&\n                        bookingToApprove === booking._id\n                      }\n                    >\n                      {loadingApproveBooking &&\n                      bookingToApprove === booking._id ? (\n                        <Spinner\n                          as='span'\n                          animation='border'\n                          size='sm'\n                          role='status'\n                          aria-hidden='true'\n                        />\n                      ) : (\n                        <i className='fas fa-check-circle'></i>\n                      )}\n                    </Button>\n                  )}\n\n                  <Button\n                    variant='danger'\n                    size='sm'\n                    onClick={() => handleDelete(booking._id)}\n                    disabled={\n                      loadingDeleteBooking && bookingToDelete === booking._id\n                    }\n                  >\n                    {loadingDeleteBooking && bookingToDelete === booking._id ? (\n                      <Spinner\n                        as='span'\n                        animation='border'\n                        size='sm'\n                        role='status'\n                        aria-hidden='true'\n                      />\n                    ) : (\n                      <i className='fas fa-trash'></i>\n                    )}\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n      <ReactPaginate\n        pageCount={Math.ceil(allTotal / perPage)}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        onPageChange={handlePageClick}\n        initialPage={currentPage - 1}\n        containerClassName='pagination justify-content-sm-center overflow-auto'\n        pageClassName='page-item'\n        pageLinkClassName='page-link'\n        activeClassName='active'\n        previousClassName='page-item'\n        previousLinkClassName='page-link'\n        nextClassName='page-item'\n        nextLinkClassName='page-link'\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n      />\n    </Container>\n  );\n};\n\nexport default BookingsListScreen;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Message from './components/Message';\nimport HomeScreen from './screens/HomeScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ConfirmBookingScreen from './screens/ConfirmBookingScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport DaysListScreen from './screens/DaysListScreen';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport RestrictRoute from './components/routing/RestrictRoute';\nimport { loadUser } from './actions/userActions';\nimport DayEditScreen from './screens/DayEditScreen';\nimport BookingsListScreen from './screens/BookingsListScreen';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <div className='App'>\n        <Header />\n        <Container>\n          <Message />\n          <Route path='/' component={HomeScreen} exact />\n          <PrivateRoute path='/profile' component={ProfileScreen} />\n          <PrivateRoute\n            path='/confirm-booking'\n            component={ConfirmBookingScreen}\n          />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/signup' component={SignupScreen} />\n          <RestrictRoute\n            path='/admin/days'\n            component={DaysListScreen}\n            allowed={['admin']}\n            exact\n          />\n          <RestrictRoute\n            path='/admin/days/:id/edit'\n            component={DayEditScreen}\n            allowed={['admin']}\n          />\n          <RestrictRoute\n            path='/admin/bookings'\n            component={BookingsListScreen}\n            allowed={['admin']}\n            exact\n          />\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}